This Date table supports advanced fiscal scenarios, including 13-month calendars. Developed by SQLBI — production-ready and battle-tested. No changes needed unless working with a non-standard fiscal structure.

 This code is publicly available and shared by SQLBI as part of their learning resources and examples.
I am not claiming authorship — I’m leveraging it as a proven foundation to learn, apply, and build.
I’m not reinventing the wheel — I’m learning how to use it to build better tools.
Reference: DAX Patterns (by SQLBI).


-- Create an advanced Date table with fiscal logic
Date = 
VAR FirstFiscalMonth = 3   -- First month of the fiscal year (March)
VAR MonthsInYear = 12      -- Usually 12, can be 13 for fiscal calendars

-- Get first and last sales dates from fact table
VAR CalendarFirstDate = MIN(Sales[Order Date])
VAR CalendarLastDate = MAX(Sales[Order Date])

-- Extract year/month for both boundaries
VAR CalendarFirstYear = YEAR(CalendarFirstDate)
VAR CalendarFirstMonth = MONTH(CalendarFirstDate)
VAR CalendarLastYear = YEAR(CalendarLastDate)
VAR CalendarLastMonth = MONTH(CalendarLastDate)

-- GranularityByDate generates row per day with a Year Month Number
VAR GranularityByDate =
    ADDCOLUMNS(
        CALENDAR(
            DATE(CalendarFirstYear, CalendarFirstMonth, 1),
            EOMONTH(DATE(CalendarLastYear, CalendarLastMonth, 1), 0)
        ),
        "Year Month Number", YEAR([Date]) * MonthsInYear + MONTH([Date]) - 1
    )

-- For fiscal month modeling: row per month
VAR GranularityByMonth =
    SELECTCOLUMNS(
        GENERATESERIES(
            CalendarFirstYear * MonthsInYear + CalendarFirstMonth - 1
                - (MonthsInYear - 12) * (CalendarFirstMonth < FirstFiscalMonth),
            CalendarLastYear * MonthsInYear + CalendarLastMonth - 1
                - (MonthsInYear - 12) * (CalendarLastMonth < FirstFiscalMonth),
            1
        ),
        "Year Month Number", [Value]
    )

-- Now generate full date table with additional fiscal and calendar columns
RETURN
GENERATE(
    GranularityByDate,
    VAR YearMonthNumber = [Year Month Number]
    VAR FiscalMonthNumber =
        MOD(
            YearMonthNumber + 1 * (FirstFiscalMonth > 1) * (MonthsInYear + 1 - FirstFiscalMonth),
            MonthsInYear
        ) + 1
    VAR FiscalYearNumber =
        QUOTIENT(
            YearMonthNumber + 1 * (FirstFiscalMonth > 1) * (MonthsInYear + 1 - FirstFiscalMonth),
            MonthsInYear
        )
    VAR OffsetFiscalMonthNumber = MonthsInYear + 1 - (MonthsInYear - 12)
    VAR MonthNumber =
        IF(
            FiscalMonthNumber <= 12 && FirstFiscalMonth > 1,
            FiscalMonthNumber + FirstFiscalMonth
                - IF(
                    FiscalMonthNumber > (OffsetFiscalMonthNumber - FirstFiscalMonth),
                    OffsetFiscalMonthNumber,
                    1
                ),
            FiscalMonthNumber
        )
    VAR YearNumber = FiscalYearNumber - 1 * (MonthNumber > FiscalMonthNumber)
    VAR YearMonthKey = YearNumber * 100 + MonthNumber
    VAR MonthDate = DATE(YearNumber, MonthNumber, 1)
    VAR FiscalQuarterNumber = MIN(ROUNDUP(FiscalMonthNumber / 3, 0), 4)
    VAR FiscalYearQuarterNumber = FiscalYearNumber * 4 + FiscalQuarterNumber - 1
    VAR FiscalMonthInQuarterNumber = MOD(FiscalMonthNumber - 1, 3) + 1 + 3 * (MonthNumber > 12)
    VAR MonthInQuarterNumber = MOD(MonthNumber - 1, 3) + 1 + 3 * (MonthNumber > 12)
    VAR QuarterNumber = MIN(ROUNDUP(MonthNumber / 3, 0), 4)
    VAR YearQuarterNumber = YearNumber * 4 + QuarterNumber - 1

    RETURN ROW(
        "Year Month Key", YearMonthKey,
        "Year", YearNumber,
        "Year Quarter", FORMAT(QuarterNumber, "\Q0") & "-" & FORMAT(YearNumber, "0000"),
        "Year Quarter Number", YearQuarterNumber,
        "Quarter", FORMAT(QuarterNumber, "\Q0"),
        "Year Month", IF(MonthNumber > 12, FORMAT(MonthNumber, "\M00") & FORMAT(YearNumber, " 0000"), FORMAT(MonthDate, "mmm yyyy")),
        "Month", IF(MonthNumber > 12, FORMAT(MonthNumber, "\M00"), FORMAT(MonthDate, "mmm")),
        "Month Number", MonthNumber,
        "Month In Quarter Number", MonthInQuarterNumber,
        "Fiscal Year", FORMAT(FiscalYearNumber, "\F\Y 0000"),
        "Fiscal Year Number", FiscalYearNumber,
        "Fiscal Year Quarter", FORMAT(FiscalQuarterNumber, "\F\Q0") & "-" & FORMAT(FiscalYearNumber, "0000"),
        "Fiscal Year Quarter Number", FiscalYearQuarterNumber,
        "Fiscal Quarter", FORMAT(FiscalQuarterNumber, "\F\Q0"),
        "Fiscal Month", IF(MonthNumber > 12, FORMAT(MonthNumber, "\M00"), FORMAT(MonthDate, "mmm")),
        "Fiscal Month Number", FiscalMonthNumber,
        "Fiscal Month In Quarter Number", FiscalMonthInQuarterNumber
    )
)


Thank you :)
